#!/usr/bin/env bash 
set -euo pipefail

DEPLOY_DIR="$(cd -- "$(dirname "${BASH_SOURCE}")" ; cd .. > /dev/null 2>&1 && pwd -P)"
cd $DEPLOY_DIR

# export LEIHS_VERSION="6.0.0-RC.1" # tmp hardcoded
export LEIHS_VERSION="$(bin/get-latest-leihs-version | tail -n 1)"
echo "LEIHS_VERSION=$LEIHS_VERSION"

echo; echo "Making release archive for 'Leihs ${LEIHS_VERSION}'."; echo
read -p "Continue (y/n)?" choice
case "$choice" in
  y|Y ) echo;;
  * ) exit 1;;
esac

export ARTEFACTS_DIR="$(cd "$(dirname "${BASH_SOURCE}")" && mkdir -p "../tmp/release-builds/${LEIHS_VERSION}/" && cd "../tmp/release-builds/${LEIHS_VERSION}" && pwd -P)"
export ARTEFACTS_ARCHIVE_FILE="${ARTEFACTS_DIR}/build-artefacts.tar.gz"
export LOCAL_CACHE_DIR="${ARTEFACTS_DIR}/build-artefacts/"
rm -rf "$ARTEFACTS_DIR" && mkdir -p "$LOCAL_CACHE_DIR"
source bin/set-env-build-cache

bin/ansible-playbook -i 'localhost,' --connection=local -v build_only_play.yml

# check if leihs-ui artefact is present
# (because it is only indirectly used, it can happen thats its missing. we want to enforce the presence to that recompile of services is still fast if other parts have changed!)
if ! ls "${LOCAL_CACHE_DIR}"/leihs-ui_*.tgz &>/dev/null; then
  echo "ERROR: leihs-ui artefact is missing! check that deploy/roles/leihs-admin-install/tasks/build.yml ran!"
  exit 1
fi

tar -C "$LOCAL_CACHE_DIR" -cvzf "$ARTEFACTS_ARCHIVE_FILE" . # yes, no version in the name, because it will an genericly names attachment.
