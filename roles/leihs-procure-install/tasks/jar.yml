- name: create jar
  tags: [builds_artefact, builds_artefact_with_java]
  delegate_to: localhost
  args:
    executable: /bin/bash
  shell: |
    DEPLOY_DIR='{{playbook_dir}}'
    PROJECT_DIR="${DEPLOY_DIR}/../procure"

    ARTEFACT_DIGEST="$(cd "$PROJECT_DIR" && git log -n 1 HEAD --pretty=%T)"
    ARTEFACT_PATH="${PROJECT_DIR}/server/target/leihs-procure.jar"
    ARTEFACT_S3_CACHE_FILE_NAME="leihs-procure.jar"

    function build_artefact() {
      cd $PROJECT_DIR

      # deps
      gem install $(grep 'exiftool_vendored (' server/database/Gemfile.lock | sed -En "s/\s*\((.*)\)/:\1/p")
      export PATH="$(ruby -r exiftool_vendored -e 'puts ExiftoolVendored.path_to_exiftool_home'):${PATH}"

      ## frontend
      export PUBLIC_URL="/procure"
      cd "${PROJECT_DIR}/client"
      npm ci || npm install
      npm run build

      ## backend and uberjar
      cd "${PROJECT_DIR}/server"
      $DEPLOY_DIR/bin/lein clean
      $DEPLOY_DIR/bin/lein with-profile prod uberjar
    }
    {{ lookup('template', "{{playbook_dir}}/helpers/build-artefact-with-s3-cache.bash") }}

- file:
    path: "{{leihs_procure_dir}}"
    state: directory
    owner: "{{leihs_procure_user}}"
    recurse: yes
  name: create empty {{leihs_procure_dir}}

- copy:
    src: "{{playbook_dir}}/../procure/server/target/leihs-procure.jar"
    dest: "{{leihs_procure_dir}}/leihs-procure.jar"
    owner: "{{leihs_procure_user}}"
  name: copy jar over to server
