- name: restore client app from cache
  delegate_to: '{{ build_host_java }}'
  when: not force_rebuild
  failed_when: false
  register: restore_cache_procure_client
  changed_when: restore_cache_procure_client.rc == 0
  args:
    executable: /bin/bash
  shell: |
    set -eux
    DEPLOY_DIR='{{playbook_dir}}'
    source "${DEPLOY_DIR}/bin/.caching-helpers.sh"

    cd $DEPLOY_DIR/../procure
    restore_from_cache "procure-client" "./client"

- name: debug client app build caching
  debug:
    var: restore_cache_procure_client
  when: debug_build_caching

- name: create client app
  delegate_to: '{{ build_host_java }}'
  when: not restore_cache_procure_client.changed
  args:
    executable: /bin/bash
  shell: |
    set -eux
    DEPLOY_DIR='{{playbook_dir}}'
    source "${DEPLOY_DIR}/bin/.caching-helpers.sh"

    PUBLIC_PATH="/procure"
    export PUBLIC_URL="$PUBLIC_PATH" # for react-scripts

    # needed npm config when running as root
    test $(id -u) = 0 && npm config set unsafe-perm true

    cd "${DEPLOY_DIR}/../procure/client"
    npm ci || npm install # for building
    npm run build
    rm -rf .git node_modules # optimize disk size/transfer time
    npm ci --production || npm install --production # for serving

    # subdir like public path for simpler config
    rm -rf procure_client_app
    mkdir -p "procure_client_app$(dirname ${PUBLIC_PATH})"
    mv build "procure_client_app${PUBLIC_PATH}"

    cd ..
    tar -czf client.tgz client
    save_to_cache "procure-client" "client.tgz" "./client"

- unarchive:
    src: '{{playbook_dir}}/../procure/client.tgz'
    dest: '{{leihs_procure_dir}}'
    owner: '{{leihs_procure_user}}'
  name: copy client app over to server
